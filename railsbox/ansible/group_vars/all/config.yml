---
vm_name: koreci-s
path: /koreci-s
git_branch: master
vm_os: ubuntu/trusty64
environments:
  - development
package_bundles:
  - curl
packages:
  - curl
  - libcurl3
  - libcurl3-gnutls
  - libcurl4-openssl-dev
manual_ruby_version: 2.4.1
server_name: localhost
rails_version: 4
ruby_install: rbenv
ruby_version: 2.2.1
environment_file: /koreci-s/.envrc
databases:
  - postgresql
  - redis
background_jobs:
  - sidekiq
postgresql_orm: activerecord
mysql_orm: none
mongodb_orm: none
redis_orm: redis-rb
mongodb_db_name: myapp
mysql_db_name: myapp
mysql_db_user: vagrant
mysql_db_password: 
postgresql_db_name: koreci-s
postgresql_db_user: vagrant
postgresql_db_password: koreci-apps
postgresql_extensions:
  - hstore
delayed_job_command: script/delayed_job run
sidekiq_command: sidekiq
resque_command: rake resque:work
server_type: nginx_puma
git_url: git@github.com:sukorenomw/koreci-s.git
sidekiq_app_name: koreci-s-sidekiq

app_name: '{{ vm_name }}'
user_name: '{{ "vagrant" if target == "virtualbox" else app_name }}'
group_name: '{{ user_name }}'

user_home_path: '/home/{{ user_name }}'

ssl_certificate_path: /etc/nginx/ssl/{{ server_name }}.crt
ssl_certificate_key_path: /etc/nginx/ssl/{{ server_name }}.key

releases_path: '{{ path }}/releases'
shared_path: '{{ path }}/shared'

app_path: '{{ path }}{{ "/current" if target != "virtualbox" else "" }}'
app_public_path: "{{ app_path }}/public"
app_config_path: '{{ app_path }}/config'
shared_config_path: '{{ app_path if target == "virtualbox" else shared_path }}/config'
app_temp_path: "/tmp{{ app_path }}"
app_logs_path: "{{ app_path }}/log"

unicorn_sock_path: "/tmp/unicorn.{{ rails_env }}.sock"
unicorn_config_path: "{{ app_config_path }}/unicorn.{{ rails_env }}.rb"
unicorn_pid_path: "{{ app_temp_path }}/unicorn.{{ rails_env }}.pid"
unicorn_stderr_path: "{{ app_logs_path }}/unicorn.err.log"
unicorn_stdout_path: "{{ app_logs_path }}/unicorn.log"

puma_bind_path: "unix://{{ app_temp_path }}/sockets/puma.{{ rails_env }}.sock"
puma_config_path: "{{ app_config_path }}/puma.{{ rails_env }}.rb"
puma_pidfile_path: "{{ app_temp_path }}/pids/puma.{{ rails_env }}.pid"
puma_stderr_redirect_path: "{{ app_logs_path }}/puma.{{ rails_env }}.err.log"
puma_stdout_redirect_path: "{{ app_logs_path }}/puma.{{ rails_env }}.log"

ruby_user_name: '{{ "root" if ruby_install == "package" else user_name }}'

use_apt_proxy: false
